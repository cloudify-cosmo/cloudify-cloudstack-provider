authentication:
    api_key: 'API_KEY'
    api_secret_key: 'API_SECRET_KEY'
    api_url: 'https://cloudstack/client/api'

# zone type basic or advanced
# cloudstack:
#	zone_type: 'advanced'    

# compute:
#     management_server:
#		  use_existing: false
#		  use_private_ip: false
#         user_on_management: root
#         userhome_on_management: /root
#         instance:
#             private_ip: 
#             name: cloudify-management-server
#             image: f181fccb-62ea-4296-a0a0-e773a1391dc8
#             size: Medium
#         management_keypair:
#             use_existing: false
#             name: cloudify-management-kp
# #            provided:
# #                public_key_filepath:
# #                private_key_filepath: ~/.ssh/cloudify-management-kp.pem
#             auto_generated:
#                 private_key_target_path: ~/.ssh/cloudify-management-kp.pem
#     agent_servers:
#         agents_keypair:
#             use_existing: false
#             name: cloudify-agents-kp
# #            provided:
# #                public_key_filepath:
# #                private_key_filepath: ~/.ssh/cloudify-agents-kp.pem
#             auto_generated:
#                 private_key_target_path: ~/.ssh/cloudify-agents-kp.pem


#networking:
#    management_network:
#        use_existing: true
#        name: cloudify-management-network
#        network_type: advanced
#        network_offering: SourceNatNiciraNvpNetwork
#        network_gateway: 10.10.1.1
#        network_mask: 255.255.255.0
#        network_zone: BETA-SBP-DC-1
#        network_domain: 'cloudify-mgmt.local'
#        protocol: TCP
#        cidr: 0.0.0.0/0
#        ports: [5555, 5672, 53229, 22, 8100, 80]
#    management_security_group:
#        use_existing: False
#        name: cloudify-sg-management
#        protocol: TCP
#        cidr: 0.0.0.0/0
#        ports: [5555, 5672, 53229, 22, 8100, 80]

# # Cloudify Installation Configuration
##################################
#cloudify:
#   # You would probably want a prefix that ends with underscore or dash
#   resources_prefix: your_name_here
#   server:
#       packages:
#           components_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-components_3.0.0-ga-b6_amd64.deb
#           core_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-core_3.0.0-ga-b6_amd64.deb
#           ui_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-ui_3.0.0-ga-b6_amd64.deb
#   agents:
#       packages:
#           ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-ubuntu-agent_3.0.0-ga-b6_amd64.deb
#           centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-centos-agent_3.0.0-ga-b6_amd64.deb
#           windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.0.0/nightly_6/cloudify-windows-agent_3.0.0-ga-b6_amd64.deb
#       config:
#            min_workers: 2
#            max_workers: 5
#            remote_execution_port: 22
#            # user: Enter-Default-Image-User-Here-(Optional)
#    workflows:
#        task_retries: 10  # -1 means we retry forever
#        retry_interval: 30
#    bootstrap:
#        ssh:
#            # number of retries for the initial connectivity check with the management server
#            initial_connectivity_retries: 25
#            # wait time (in seconds) in between the aforementioned retries
#            initial_connectivity_retries_interval: 5
#            # number of retries for bootstrap commands run via SSH
#            command_retries: 3
#            # wait time (in seconds) in between the aforementioned retries
#            retries_interval: 3
#            # number of SSH connection attempts (in a single retry)
#            connection_attempts: 3
#            # timeout (in seconds) for an SSH connection
#            socket_timeout: 10

